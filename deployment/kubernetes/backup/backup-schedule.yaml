# PostgreSQL Backup CronJob
# Automated daily backups using pg_dump

---
# Backup CronJob
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
  namespace: distributed-commerce
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  successfulJobsHistoryLimit: 7
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: backup
            image: postgres:16-alpine
            command:
            - /bin/sh
            - -c
            - |
              timestamp=$(date +%Y%m%d-%H%M%S)
              pg_dump -h postgres-service -U $POSTGRES_USER -d DistributedCommerce | gzip > /backups/backup-$timestamp.sql.gz
              # Cleanup old backups (keep last 30 days)
              find /backups -name "backup-*.sql.gz" -mtime +30 -delete
            env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: shared-secrets
                  key: POSTGRES_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: shared-secrets
                  key: POSTGRES_PASSWORD
            volumeMounts:
            - name: backup-storage
              mountPath: /backups
          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: postgres-backup-pvc

---
# Backup PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-backup-pvc
  namespace: distributed-commerce
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: standard

---
# Velero Backup Schedule (if using Velero)
# Install Velero first: https://velero.io/docs/v1.12/basic-install/
apiVersion: velero.io/v1
kind: Schedule
metadata:
  name: distributed-commerce-daily
  namespace: velero
spec:
  schedule: "0 3 * * *"  # Daily at 3 AM
  template:
    includedNamespaces:
    - distributed-commerce
    - distributed-commerce-dev
    - distributed-commerce-staging
    - distributed-commerce-prod
    storageLocation: default
    volumeSnapshotLocations:
    - default
    ttl: 720h0m0s  # 30 days
